name: Linux Vim/neovim

on:
  push:
    branches:
    - master
    - "*playground"
  pull_request:
    branches:
    - master


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        name:
          - vim-v8.2
          - vim-v8.1
          # - neovim-nightly
          - neovim-v0.4.3
        include:
          - name: vim-v8.2
            vim-url: v8.2.0182/GVim-v8.2.0182.glibc2.15-x86_64.AppImage
            coverage: true
            COVERALLS_SERVICE_JOB_ID: ${{ github.sha }}-1
          - name: vim-v8.1
            vim-url: v8.1.2414/GVim-v8.1.2414.glibc2.15-x86_64.AppImage
          - name: neovim-nightly
            neovim-version: nightly
            coverage: true
            COVERALLS_SERVICE_JOB_ID: ${{ github.sha }}-2
          - name: neovim-v0.4.3
            neovim-version: v0.4.3
            coverage: true
            COVERALLS_SERVICE_JOB_ID: ${{ github.sha }}-3

    env:
      THEMIS_PROFILE: vim-profile.txt
      NODE_COVERALLS_DEBUG: 1
      COVERALLS_SERVICE_JOB_ID: ${{ matrix.COVERALLS_SERVICE_JOB_ID }}

    steps:
    - name: Install Vim
      if: startsWith(matrix.name, 'vim')
      run: |
        mkdir -p ~/vim/bin
        curl -L https://github.com/vim/vim-appimage/releases/download/${{ matrix.vim-url }} -o ~/vim/bin/vim
        chmod u+x ~/vim/bin/vim
    - name: Install Neovim
      if: startsWith(matrix.name, 'neovim')
      shell: bash
      run: |
        mkdir -p ~/nvim/bin
        curl -L https://github.com/neovim/neovim/releases/download/${{ matrix.neovim-version }}/nvim.appimage -o ~/nvim/bin/nvim
        chmod u+x ~/nvim/bin/nvim
    - name: Install vim-themis
      run: git clone --depth 1 --branch v1.5.4 --single-branch https://github.com/thinca/vim-themis ~/themis

    - name: Install vcov
      run: git clone --depth 1 --branch v0.2.0 --single-branch https://github.com/LumaKernel/vcov $HOME/vcov

    - uses: actions/checkout@v2

    - name: Run test with Vim
      if: startsWith(matrix.name, 'vim')
      timeout-minutes: 10
      run: |
        export PATH=~/vim/bin:$PATH
        export PATH=~/themis/bin:$PATH
        export THEMIS_VIM=vim
        vim --version
        themis --version
        themis

    - name: Run test with Neovim
      if: startsWith(matrix.name, 'neovim')
      timeout-minutes: 10
      run: |
        export PATH=~/nvim/bin:$PATH
        export PATH=~/themis/bin:$PATH
        export THEMIS_VIM=nvim
        nvim --version
        themis --version
        themis

    - name: cat profile
      run: cat $THEMIS_PROFILE

    # NOTE: older versions of vim, can't produce the profile including sufficient information.
    - name: Make coverage report
      if: matrix.coverage
      run: |
        export PATH=$HOME/vcov/bin:$PATH
        vcov --version
        vcov $THEMIS_PROFILE -o lcov-${{ runner.os }}.info

    - name: cat lcov-${{ runner.os }}.info
      if: matrix.coverage
      run: cat lcov-${{ runner.os }}.info

    - uses: codecov/codecov-action@v1
      if: matrix.coverage
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        file: ./lcov-${{ runner.os }}.info
        fail_ci_if_error: false #optional (default = false)

    # - name: Coveralls
    #   if: matrix.coverage
    #   uses: coverallsapp/github-action@master
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     path-to-lcov: ./lcov-${{ runner.os }}.info
    - name: Coveralls Parallel
      if: matrix.coverage
      uses: coverallsapp/github-action@master
      # uses: jlabeit/github-action@fix-paralle-builds
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel: true
        path-to-lcov: ./lcov-${{ runner.os }}.info # optional (default value)
    # - name: Coveralls Finished
    #   if: matrix.coverage
    #   # uses: coverallsapp/github-action@master
    #   uses: jlabeit/github-action@fix-paralle-builds
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     parallel-finished: true
  
  coverage-coveralls:
    needs: ["test"]
    runs-on: ubuntu-latest
  
    env:
      NODE_COVERALLS_DEBUG: 1

    steps:
    - name: Coveralls Finished
      # uses: coverallsapp/github-action@master
      uses: jlabeit/github-action@fix-paralle-builds
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
